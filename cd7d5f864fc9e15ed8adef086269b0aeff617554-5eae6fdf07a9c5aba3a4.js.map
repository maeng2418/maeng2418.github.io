{"version":3,"file":"cd7d5f864fc9e15ed8adef086269b0aeff617554-5eae6fdf07a9c5aba3a4.js","mappings":"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","sources":["webpack://maeng2418.github.io/./node_modules/camelcase/index.js","webpack://maeng2418.github.io/../src/image-utils.ts","webpack://maeng2418.github.io/../src/components/hooks.ts","webpack://maeng2418.github.io/../src/components/layout-wrapper.tsx","webpack://maeng2418.github.io/../src/components/picture.tsx","webpack://maeng2418.github.io/../src/components/placeholder.tsx","webpack://maeng2418.github.io/../src/components/main-image.tsx","webpack://maeng2418.github.io/../src/components/gatsby-image.server.tsx","webpack://maeng2418.github.io/../src/components/gatsby-image.browser.tsx","webpack://maeng2418.github.io/../src/components/static-image.server.tsx","webpack://maeng2418.github.io/../src/components/static-image.tsx","webpack://maeng2418.github.io/./src/components/bio/index.tsx","webpack://maeng2418.github.io/./src/utils/scroll.js","webpack://maeng2418.github.io/./node_modules/smooth-scroll/dist/smooth-scroll.min.js","webpack://maeng2418.github.io/./node_modules/smoothscroll-polyfill/dist/smoothscroll.js"],"sourcesContent":["'use strict';\n\nconst preserveCamelCase = string => {\n\tlet isLastCharLower = false;\n\tlet isLastCharUpper = false;\n\tlet isLastLastCharUpper = false;\n\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst character = string[i];\n\n\t\tif (isLastCharLower && /[a-zA-Z]/.test(character) && character.toUpperCase() === character) {\n\t\t\tstring = string.slice(0, i) + '-' + string.slice(i);\n\t\t\tisLastCharLower = false;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = true;\n\t\t\ti++;\n\t\t} else if (isLastCharUpper && isLastLastCharUpper && /[a-zA-Z]/.test(character) && character.toLowerCase() === character) {\n\t\t\tstring = string.slice(0, i - 1) + '-' + string.slice(i - 1);\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = false;\n\t\t\tisLastCharLower = true;\n\t\t} else {\n\t\t\tisLastCharLower = character.toLowerCase() === character && character.toUpperCase() !== character;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = character.toUpperCase() === character && character.toLowerCase() !== character;\n\t\t}\n\t}\n\n\treturn string;\n};\n\nconst camelCase = (input, options) => {\n\tif (!(typeof input === 'string' || Array.isArray(input))) {\n\t\tthrow new TypeError('Expected the input to be `string | string[]`');\n\t}\n\n\toptions = Object.assign({\n\t\tpascalCase: false\n\t}, options);\n\n\tconst postProcess = x => options.pascalCase ? x.charAt(0).toUpperCase() + x.slice(1) : x;\n\n\tif (Array.isArray(input)) {\n\t\tinput = input.map(x => x.trim())\n\t\t\t.filter(x => x.length)\n\t\t\t.join('-');\n\t} else {\n\t\tinput = input.trim();\n\t}\n\n\tif (input.length === 0) {\n\t\treturn '';\n\t}\n\n\tif (input.length === 1) {\n\t\treturn options.pascalCase ? input.toUpperCase() : input.toLowerCase();\n\t}\n\n\tconst hasUpperCase = input !== input.toLowerCase();\n\n\tif (hasUpperCase) {\n\t\tinput = preserveCamelCase(input);\n\t}\n\n\tinput = input\n\t\t.replace(/^[_.\\- ]+/, '')\n\t\t.toLowerCase()\n\t\t.replace(/[_.\\- ]+(\\w|$)/g, (_, p1) => p1.toUpperCase())\n\t\t.replace(/\\d+(\\w|$)/g, m => m.toUpperCase());\n\n\treturn postProcess(input);\n};\n\nmodule.exports = camelCase;\n// TODO: Remove this for the next major release\nmodule.exports.default = camelCase;\n","import camelCase from \"camelcase\"\nimport type { IGatsbyImageData } from \"./index\"\n\nconst DEFAULT_PIXEL_DENSITIES = [0.25, 0.5, 1, 2]\nexport const DEFAULT_BREAKPOINTS = [750, 1080, 1366, 1920]\nexport const EVERY_BREAKPOINT = [\n  320, 654, 768, 1024, 1366, 1600, 1920, 2048, 2560, 3440, 3840, 4096,\n]\nconst DEFAULT_FLUID_WIDTH = 800\nconst DEFAULT_FIXED_WIDTH = 800\nconst DEFAULT_ASPECT_RATIO = 4 / 3\n\nexport type Fit = \"cover\" | \"fill\" | \"inside\" | \"outside\" | \"contain\"\n\nexport type Layout = \"fixed\" | \"fullWidth\" | \"constrained\"\nexport type ImageFormat = \"jpg\" | \"png\" | \"webp\" | \"avif\" | \"auto\" | \"\"\n\n/**\n * The minimal required reporter, as we don't want to import it from gatsby-cli\n */\nexport interface IReporter {\n  warn(message: string): void\n}\n\nexport interface ISharpGatsbyImageArgs {\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  placeholder?: \"tracedSVG\" | \"dominantColor\" | \"blurred\" | \"none\"\n  tracedSVGOptions?: Record<string, unknown>\n  width?: number\n  height?: number\n  aspectRatio?: number\n  sizes?: string\n  quality?: number\n  transformOptions?: {\n    fit?: Fit\n    cropFocus?: number | string\n    duotone?: {\n      highlight: string\n      shadow: string\n      opacity?: number\n    }\n    grayscale?: boolean\n    rotate?: number\n    trim?: number\n  }\n  jpgOptions?: Record<string, unknown>\n  pngOptions?: Record<string, unknown>\n  webpOptions?: Record<string, unknown>\n  avifOptions?: Record<string, unknown>\n  blurredOptions?: { width?: number; toFormat?: ImageFormat }\n  breakpoints?: Array<number>\n  outputPixelDensities?: Array<number>\n  backgroundColor?: string\n}\n\nexport interface IImageSizeArgs {\n  width?: number\n  height?: number\n  layout?: Layout\n  filename: string\n  outputPixelDensities?: Array<number>\n  breakpoints?: Array<number>\n  fit?: Fit\n  reporter?: IReporter\n  sourceMetadata: { width: number; height: number }\n}\n\nexport interface IImageSizes {\n  sizes: Array<number>\n  presentationWidth: number\n  presentationHeight: number\n  aspectRatio: number\n  unscaledWidth: number\n}\n\nexport interface IImage {\n  src: string\n  width: number\n  height: number\n  format: ImageFormat\n}\n\nexport interface IGatsbyImageHelperArgs {\n  pluginName: string\n  generateImageSource: (\n    filename: string,\n    width: number,\n    height: number,\n    format: ImageFormat,\n    fit?: Fit,\n    options?: Record<string, unknown>\n  ) => IImage\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  filename: string\n  placeholderURL?: string\n  width?: number\n  height?: number\n  sizes?: string\n  reporter?: IReporter\n  sourceMetadata?: { width: number; height: number; format: ImageFormat }\n  fit?: Fit\n  options?: Record<string, unknown>\n  breakpoints?: Array<number>\n  backgroundColor?: string\n  aspectRatio?: number\n}\n\nconst warn = (message: string): void => console.warn(message)\n\nconst sortNumeric = (a: number, b: number): number => a - b\n\nexport const getSizes = (width: number, layout: Layout): string | undefined => {\n  switch (layout) {\n    // If screen is wider than the max size, image width is the max size,\n    // otherwise it's the width of the screen\n    case `constrained`:\n      return `(min-width: ${width}px) ${width}px, 100vw`\n\n    // Image is always the same width, whatever the size of the screen\n    case `fixed`:\n      return `${width}px`\n\n    // Image is always the width of the screen\n    case `fullWidth`:\n      return `100vw`\n\n    default:\n      return undefined\n  }\n}\n\nexport const getSrcSet = (images: Array<IImage>): string =>\n  images.map(image => `${image.src} ${image.width}w`).join(`,\\n`)\n\nexport function formatFromFilename(filename: string): ImageFormat | undefined {\n  const dot = filename.lastIndexOf(`.`)\n  if (dot !== -1) {\n    const ext = filename.slice(dot + 1)\n    if (ext === `jpeg`) {\n      return `jpg`\n    }\n    if (ext.length === 3 || ext.length === 4) {\n      return ext as ImageFormat\n    }\n  }\n  return undefined\n}\n\nexport function setDefaultDimensions(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageHelperArgs {\n  let {\n    layout = `constrained`,\n    width,\n    height,\n    sourceMetadata,\n    breakpoints,\n    aspectRatio,\n    formats = [`auto`, `webp`],\n  } = args\n  formats = formats.map(format => format.toLowerCase() as ImageFormat)\n  layout = camelCase(layout) as Layout\n\n  if (width && height) {\n    return { ...args, formats, layout, aspectRatio: width / height }\n  }\n  if (sourceMetadata.width && sourceMetadata.height && !aspectRatio) {\n    aspectRatio = sourceMetadata.width / sourceMetadata.height\n  }\n\n  if (layout === `fullWidth`) {\n    width = width || sourceMetadata.width || breakpoints[breakpoints.length - 1]\n    height = height || Math.round(width / (aspectRatio || DEFAULT_ASPECT_RATIO))\n  } else {\n    if (!width) {\n      if (height && aspectRatio) {\n        width = height * aspectRatio\n      } else if (sourceMetadata.width) {\n        width = sourceMetadata.width\n      } else if (height) {\n        width = Math.round(height / DEFAULT_ASPECT_RATIO)\n      } else {\n        width = DEFAULT_FIXED_WIDTH\n      }\n    }\n\n    if (aspectRatio && !height) {\n      height = Math.round(width / aspectRatio)\n    } else if (!aspectRatio) {\n      aspectRatio = width / height\n    }\n  }\n  return { ...args, width, height, aspectRatio, layout, formats }\n}\n\n/**\n * Use this for getting an image for the blurred placeholder. This ensures the\n * aspect ratio and crop match the main image\n */\nexport function getLowResolutionImageURL(\n  args: IGatsbyImageHelperArgs,\n  width = 20\n): string {\n  args = setDefaultDimensions(args)\n  const { generateImageSource, filename, aspectRatio } = args\n  return generateImageSource(\n    filename,\n    width,\n    Math.round(width / aspectRatio),\n    args.sourceMetadata.format || `jpg`,\n    args.fit,\n    args.options\n  )?.src\n}\n\nexport function generateImageData(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageData {\n  args = setDefaultDimensions(args)\n\n  let {\n    pluginName,\n    sourceMetadata,\n    generateImageSource,\n    layout,\n    fit,\n    options,\n    width,\n    height,\n    filename,\n    reporter = { warn },\n    backgroundColor,\n    placeholderURL,\n  } = args\n\n  if (!pluginName) {\n    reporter.warn(\n      `[gatsby-plugin-image] \"generateImageData\" was not passed a plugin name`\n    )\n  }\n\n  if (typeof generateImageSource !== `function`) {\n    throw new Error(`generateImageSource must be a function`)\n  }\n\n  if (!sourceMetadata || (!sourceMetadata.width && !sourceMetadata.height)) {\n    // No metadata means we let the CDN handle max size etc, aspect ratio etc\n    sourceMetadata = {\n      width,\n      height,\n      format: sourceMetadata?.format || formatFromFilename(filename) || `auto`,\n    }\n  } else if (!sourceMetadata.format) {\n    sourceMetadata.format = formatFromFilename(filename)\n  }\n\n  const formats = new Set<ImageFormat>(args.formats)\n\n  if (formats.size === 0 || formats.has(`auto`) || formats.has(``)) {\n    formats.delete(`auto`)\n    formats.delete(``)\n    formats.add(sourceMetadata.format)\n  }\n\n  if (formats.has(`jpg`) && formats.has(`png`)) {\n    reporter.warn(\n      `[${pluginName}] Specifying both 'jpg' and 'png' formats is not supported. Using 'auto' instead`\n    )\n    if (sourceMetadata.format === `jpg`) {\n      formats.delete(`png`)\n    } else {\n      formats.delete(`jpg`)\n    }\n  }\n\n  const imageSizes = calculateImageSizes({ ...args, sourceMetadata })\n\n  const result: IGatsbyImageData[\"images\"] = {\n    sources: [],\n  }\n\n  let sizes = args.sizes\n  if (!sizes) {\n    sizes = getSizes(imageSizes.presentationWidth, layout)\n  }\n\n  formats.forEach(format => {\n    const images = imageSizes.sizes\n      .map(size => {\n        const imageSrc = generateImageSource(\n          filename,\n          size,\n          Math.round(size / imageSizes.aspectRatio),\n          format,\n          fit,\n          options\n        )\n        if (\n          !imageSrc?.width ||\n          !imageSrc.height ||\n          !imageSrc.src ||\n          !imageSrc.format\n        ) {\n          reporter.warn(\n            `[${pluginName}] The resolver for image ${filename} returned an invalid value.`\n          )\n          return undefined\n        }\n        return imageSrc\n      })\n      .filter(Boolean)\n\n    if (format === `jpg` || format === `png` || format === `auto`) {\n      const unscaled =\n        images.find(img => img.width === imageSizes.unscaledWidth) || images[0]\n\n      if (unscaled) {\n        result.fallback = {\n          src: unscaled.src,\n          srcSet: getSrcSet(images),\n          sizes,\n        }\n      }\n    } else {\n      result.sources?.push({\n        srcSet: getSrcSet(images),\n        sizes,\n        type: `image/${format}`,\n      })\n    }\n  })\n\n  const imageProps: Partial<IGatsbyImageData> = {\n    images: result,\n    layout,\n    backgroundColor,\n  }\n\n  if (placeholderURL) {\n    imageProps.placeholder = { fallback: placeholderURL }\n  }\n\n  switch (layout) {\n    case `fixed`:\n      imageProps.width = imageSizes.presentationWidth\n      imageProps.height = imageSizes.presentationHeight\n      break\n\n    case `fullWidth`:\n      imageProps.width = 1\n      imageProps.height = 1 / imageSizes.aspectRatio\n      break\n\n    case `constrained`:\n      imageProps.width = args.width || imageSizes.presentationWidth || 1\n      imageProps.height = (imageProps.width || 1) / imageSizes.aspectRatio\n  }\n\n  return imageProps as IGatsbyImageData\n}\n\nconst dedupeAndSortDensities = (values: Array<number>): Array<number> =>\n  Array.from(new Set([1, ...values])).sort(sortNumeric)\n\nexport function calculateImageSizes(args: IImageSizeArgs): IImageSizes {\n  const {\n    width,\n    height,\n    filename,\n    layout = `constrained`,\n    sourceMetadata: imgDimensions,\n    reporter = { warn },\n    breakpoints = DEFAULT_BREAKPOINTS,\n  } = args\n\n  // check that all dimensions provided are positive\n  const userDimensions = { width, height }\n  const erroneousUserDimensions = Object.entries(userDimensions).filter(\n    ([_, size]) => typeof size === `number` && size < 1\n  )\n  if (erroneousUserDimensions.length) {\n    throw new Error(\n      `Specified dimensions for images must be positive numbers (> 0). Problem dimensions you have are ${erroneousUserDimensions\n        .map(dim => dim.join(`: `))\n        .join(`, `)}`\n    )\n  }\n\n  if (layout === `fixed`) {\n    return fixedImageSizes(args)\n  } else if (layout === `constrained`) {\n    return responsiveImageSizes(args)\n  } else if (layout === `fullWidth`) {\n    return responsiveImageSizes({ breakpoints, ...args })\n  } else {\n    reporter.warn(\n      `No valid layout was provided for the image at ${filename}. Valid image layouts are fixed, fullWidth, and constrained. Found ${layout}`\n    )\n    return {\n      sizes: [imgDimensions.width],\n      presentationWidth: imgDimensions.width,\n      presentationHeight: imgDimensions.height,\n      aspectRatio: imgDimensions.width / imgDimensions.height,\n      unscaledWidth: imgDimensions.width,\n    }\n  }\n}\nexport function fixedImageSizes({\n  filename,\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  reporter = { warn },\n}: IImageSizeArgs): IImageSizes {\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  if (!width) {\n    if (!height) {\n      width = DEFAULT_FIXED_WIDTH\n    } else {\n      width = Math.round(height * aspectRatio)\n    }\n  } else if (!height) {\n    height = Math.round(width / aspectRatio)\n  }\n\n  const originalWidth = width // will use this for presentationWidth, don't want to lose it\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n\n  // If the image is smaller than requested, warn the user that it's being processed as such\n  // print out this message with the necessary information before we overwrite it for sizing\n  if (isTopSizeOverriden) {\n    const fixedDimension = imgDimensions.width < width ? `width` : `height`\n    reporter.warn(`\nThe requested ${fixedDimension} \"${\n      fixedDimension === `width` ? width : height\n    }px\" for the image ${filename} was larger than the actual image ${fixedDimension} of ${\n      imgDimensions[fixedDimension]\n    }px. If possible, replace the current image with a larger one.`)\n\n    if (fixedDimension === `width`) {\n      width = imgDimensions.width\n      height = Math.round(width / aspectRatio)\n    } else {\n      height = imgDimensions.height\n      width = height * aspectRatio\n    }\n  }\n\n  const sizes = densities\n    .filter(size => size >= 1) // remove smaller densities because fixed images don't need them\n    .map(density => Math.round(density * (width as number)))\n    .filter(size => size <= imgDimensions.width)\n\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function responsiveImageSizes({\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  breakpoints,\n  layout,\n}: IImageSizeArgs): IImageSizes {\n  let sizes\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  // Case 1: width of height were passed in, make sure it isn't larger than the actual image\n  width = width && Math.min(width, imgDimensions.width)\n  height = height && Math.min(height, imgDimensions.height)\n\n  // Case 2: neither width or height were passed in, use default size\n  if (!width && !height) {\n    width = Math.min(DEFAULT_FLUID_WIDTH, imgDimensions.width)\n    height = width / aspectRatio\n  }\n\n  // if it still hasn't been found, calculate width from the derived height.\n  // TS isn't smart enough to realise the type for height has been narrowed here\n  if (!width) {\n    width = (height as number) * aspectRatio\n  }\n\n  const originalWidth = width\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n  if (isTopSizeOverriden) {\n    width = imgDimensions.width\n    height = imgDimensions.height\n  }\n\n  width = Math.round(width)\n\n  if (breakpoints?.length > 0) {\n    sizes = breakpoints.filter(size => size <= imgDimensions.width)\n\n    // If a larger breakpoint has been filtered-out, add the actual image width instead\n    if (\n      sizes.length < breakpoints.length &&\n      !sizes.includes(imgDimensions.width)\n    ) {\n      sizes.push(imgDimensions.width)\n    }\n  } else {\n    sizes = densities.map(density => Math.round(density * (width as number)))\n    sizes = sizes.filter(size => size <= imgDimensions.width)\n  }\n\n  // ensure that the size passed in is included in the final output\n  if (layout === `constrained` && !sizes.includes(width)) {\n    sizes.push(width)\n  }\n  sizes = sizes.sort(sortNumeric)\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function getDimensionsAndAspectRatio(\n  dimensions,\n  options\n): { width: number; height: number; aspectRatio: number } {\n  // Calculate the eventual width/height of the image.\n  const imageAspectRatio = dimensions.width / dimensions.height\n\n  let width = options.width\n  let height = options.height\n\n  switch (options.fit) {\n    case `fill`: {\n      width = options.width ? options.width : dimensions.width\n      height = options.height ? options.height : dimensions.height\n      break\n    }\n    case `inside`: {\n      const widthOption = options.width\n        ? options.width\n        : Number.MAX_SAFE_INTEGER\n      const heightOption = options.height\n        ? options.height\n        : Number.MAX_SAFE_INTEGER\n\n      width = Math.min(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.min(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n    case `outside`: {\n      const widthOption = options.width ? options.width : 0\n      const heightOption = options.height ? options.height : 0\n\n      width = Math.max(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.max(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n\n    default: {\n      if (options.width && !options.height) {\n        width = options.width\n        height = Math.round(options.width / imageAspectRatio)\n      }\n\n      if (options.height && !options.width) {\n        width = Math.round(options.height * imageAspectRatio)\n        height = options.height\n      }\n    }\n  }\n\n  return {\n    width,\n    height,\n    aspectRatio: width / height,\n  }\n}\n","/* global GATSBY___IMAGE */\nimport { generateImageData, EVERY_BREAKPOINT } from \"../image-utils\"\nimport type { CSSProperties, HTMLAttributes, ImgHTMLAttributes } from \"react\"\nimport type { Node } from \"gatsby\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { IGatsbyImageData } from \"./gatsby-image.browser\"\nimport type {\n  IGatsbyImageHelperArgs,\n  Layout,\n  IImage,\n  ImageFormat,\n} from \"../image-utils\"\n\n// Native lazy-loading support: https://addyosmani.com/blog/lazy-loading/\nexport const hasNativeLazyLoadSupport = (): boolean =>\n  typeof HTMLImageElement !== `undefined` &&\n  `loading` in HTMLImageElement.prototype\n\nexport function gatsbyImageIsInstalled(): boolean {\n  return typeof GATSBY___IMAGE !== `undefined` && GATSBY___IMAGE\n}\n\nexport type IGatsbyImageDataParent<T = never> = T & {\n  gatsbyImageData: IGatsbyImageData\n}\nexport type IGatsbyImageParent<T = never> = T & {\n  gatsbyImage: IGatsbyImageData\n}\nexport type FileNode = Partial<Node> & {\n  childImageSharp?: IGatsbyImageDataParent<Partial<Node>>\n}\n\nconst isGatsbyImageData = (\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageData | any\n): node is IGatsbyImageData =>\n  // 🦆 check for a deep prop to be sure this is a valid gatsbyImageData object\n  Boolean(node?.images?.fallback?.src)\n\nconst isGatsbyImageDataParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageDataParent<T> | any\n): node is IGatsbyImageDataParent<T> => Boolean(node?.gatsbyImageData)\n\nconst isGatsbyImageParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageParent<T> | any\n): node is IGatsbyImageParent<T> => Boolean(node?.gatsbyImage)\n\nexport type ImageDataLike =\n  | FileNode\n  | IGatsbyImageDataParent\n  | IGatsbyImageParent\n  | IGatsbyImageData\n\nexport const getImage = (\n  node: ImageDataLike | null\n): IGatsbyImageData | undefined => {\n  // This checks both for gatsbyImageData and gatsbyImage\n  if (isGatsbyImageData(node)) {\n    return node\n  }\n  // gatsbyImageData GraphQL field\n  if (isGatsbyImageDataParent(node)) {\n    return node.gatsbyImageData\n  }\n  // gatsbyImage GraphQL field for Gatsby's Image CDN service\n  if (isGatsbyImageParent(node)) {\n    return node.gatsbyImage\n  }\n  return node?.childImageSharp?.gatsbyImageData\n}\n\nexport const getSrc = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.src\n\nexport const getSrcSet = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.srcSet\n\nexport function getWrapperProps(\n  width: number,\n  height: number,\n  layout: Layout\n): Pick<HTMLAttributes<HTMLElement>, \"className\" | \"style\"> & {\n  \"data-gatsby-image-wrapper\": string\n} {\n  const wrapperStyle: CSSProperties = {}\n\n  let className = `gatsby-image-wrapper`\n\n  // If the plugin isn't installed we need to apply the styles inline\n  if (!gatsbyImageIsInstalled()) {\n    wrapperStyle.position = `relative`\n    wrapperStyle.overflow = `hidden`\n  }\n\n  if (layout === `fixed`) {\n    wrapperStyle.width = width\n    wrapperStyle.height = height\n  } else if (layout === `constrained`) {\n    if (!gatsbyImageIsInstalled()) {\n      wrapperStyle.display = `inline-block`\n      wrapperStyle.verticalAlign = `top`\n    }\n    className = `gatsby-image-wrapper gatsby-image-wrapper-constrained`\n  }\n\n  return {\n    className,\n    \"data-gatsby-image-wrapper\": ``,\n    style: wrapperStyle,\n  }\n}\n\nexport interface IUrlBuilderArgs<OptionsType> {\n  width: number\n  height: number\n  baseUrl: string\n  format: ImageFormat\n  options: OptionsType\n}\nexport interface IGetImageDataArgs<OptionsType = Record<string, unknown>> {\n  baseUrl: string\n  /**\n   * For constrained and fixed images, the size of the image element\n   */\n  width?: number\n  height?: number\n  /**\n   * If available, pass the source image width and height\n   */\n  sourceWidth?: number\n  sourceHeight?: number\n  /**\n   * If only one dimension is passed, then this will be used to calculate the other.\n   */\n  aspectRatio?: number\n  layout?: Layout\n  /**\n   * Returns a URL based on the passed arguments. Should be a pure function\n   */\n  urlBuilder: (args: IUrlBuilderArgs<OptionsType>) => string\n\n  /**\n   * Should be a data URI\n   */\n  placeholderURL?: string\n  backgroundColor?: string\n  /**\n   * Used in error messages etc\n   */\n  pluginName?: string\n\n  /**\n   * If you do not support auto-format, pass an array of image types here\n   */\n  formats?: Array<ImageFormat>\n\n  breakpoints?: Array<number>\n\n  /**\n   * Passed to the urlBuilder function\n   */\n  options?: OptionsType\n}\n\n/**\n * Use this hook to generate gatsby-plugin-image data in the browser.\n */\nexport function getImageData<OptionsType>({\n  baseUrl,\n  urlBuilder,\n  sourceWidth,\n  sourceHeight,\n  pluginName = `getImageData`,\n  formats = [`auto`],\n  breakpoints,\n  options,\n  ...props\n}: IGetImageDataArgs<OptionsType>): IGatsbyImageData {\n  if (\n    !breakpoints?.length &&\n    (props.layout === `fullWidth` || (props.layout as string) === `FULL_WIDTH`)\n  ) {\n    breakpoints = EVERY_BREAKPOINT\n  }\n  const generateImageSource = (\n    baseUrl: string,\n    width: number,\n    height?: number,\n    format?: ImageFormat\n  ): IImage => {\n    return {\n      width,\n      height,\n      format,\n      src: urlBuilder({ baseUrl, width, height, options, format }),\n    }\n  }\n\n  const sourceMetadata: IGatsbyImageHelperArgs[\"sourceMetadata\"] = {\n    width: sourceWidth,\n    height: sourceHeight,\n    format: `auto`,\n  }\n\n  const args: IGatsbyImageHelperArgs = {\n    ...props,\n    pluginName,\n    generateImageSource,\n    filename: baseUrl,\n    formats,\n    breakpoints,\n    sourceMetadata,\n  }\n  return generateImageData(args)\n}\n\nexport function getMainProps(\n  isLoading: boolean,\n  isLoaded: boolean,\n  images: IGatsbyImageData[\"images\"],\n  loading?: \"eager\" | \"lazy\",\n  style: CSSProperties = {}\n): Partial<MainImageProps> {\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      transform: `translateZ(0)`,\n      transition: `opacity 250ms linear`,\n      width: `100%`,\n      willChange: `opacity`,\n      ...style,\n    }\n  }\n\n  const result = {\n    ...images,\n    loading,\n    shouldLoad: isLoading,\n    \"data-main-image\": ``,\n    style: {\n      ...style,\n      opacity: isLoaded ? 1 : 0,\n    },\n  }\n\n  return result\n}\n\nexport type PlaceholderImageAttrs = ImgHTMLAttributes<HTMLImageElement> &\n  Pick<PlaceholderProps, \"sources\" | \"fallback\"> & {\n    \"data-placeholder-image\"?: string\n  }\n\nexport function getPlaceholderProps(\n  placeholder: PlaceholderImageAttrs | undefined,\n  isLoaded: boolean,\n  layout: Layout,\n  width?: number,\n  height?: number,\n  backgroundColor?: string,\n  objectFit?: CSSProperties[\"objectFit\"],\n  objectPosition?: CSSProperties[\"objectPosition\"]\n): PlaceholderImageAttrs {\n  const wrapperStyle: CSSProperties = {}\n\n  if (backgroundColor) {\n    wrapperStyle.backgroundColor = backgroundColor\n\n    if (layout === `fixed`) {\n      wrapperStyle.width = width\n      wrapperStyle.height = height\n      wrapperStyle.backgroundColor = backgroundColor\n      wrapperStyle.position = `relative`\n    } else if (layout === `constrained`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    } else if (layout === `fullWidth`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    }\n  }\n\n  if (objectFit) {\n    wrapperStyle.objectFit = objectFit\n  }\n\n  if (objectPosition) {\n    wrapperStyle.objectPosition = objectPosition\n  }\n  const result: PlaceholderImageAttrs = {\n    ...placeholder,\n    \"aria-hidden\": true,\n    \"data-placeholder-image\": ``,\n    style: {\n      opacity: isLoaded ? 0 : 1,\n      transition: `opacity 500ms linear`,\n      ...wrapperStyle,\n    },\n  }\n\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    result.style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      width: `100%`,\n    }\n  }\n\n  return result\n}\n\nexport interface IArtDirectedImage {\n  media: string\n  image: IGatsbyImageData\n}\n\n/**\n * Generate a Gatsby image data object with multiple, art-directed images that display at different\n * resolutions.\n *\n * @param defaultImage The image displayed when no media query matches.\n * It is also used for all other settings applied to the image, such as width, height and layout.\n * You should pass a className to the component with media queries to adjust the size of the container,\n * as this cannot be adjusted automatically.\n * @param artDirected Array of objects which each contains a `media` string which is a media query\n * such as `(min-width: 320px)`, and the image object to use when that query matches.\n */\nexport function withArtDirection(\n  defaultImage: IGatsbyImageData,\n  artDirected: Array<IArtDirectedImage>\n): IGatsbyImageData {\n  const { images, placeholder, ...props } = defaultImage\n  const output: IGatsbyImageData = {\n    ...props,\n    images: {\n      ...images,\n      sources: [],\n    },\n    placeholder: placeholder && {\n      ...placeholder,\n      sources: [],\n    },\n  }\n\n  artDirected.forEach(({ media, image }) => {\n    if (!media) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(\n          \"[gatsby-plugin-image] All art-directed images passed to must have a value set for `media`. Skipping.\"\n        )\n      }\n      return\n    }\n\n    if (\n      image.layout !== defaultImage.layout &&\n      process.env.NODE_ENV === `development`\n    ) {\n      console.warn(\n        `[gatsby-plugin-image] Mismatched image layout: expected \"${defaultImage.layout}\" but received \"${image.layout}\". All art-directed images use the same layout as the default image`\n      )\n    }\n\n    output.images.sources.push(\n      ...image.images.sources.map(source => {\n        return { ...source, media }\n      }),\n      {\n        media,\n        srcSet: image.images.fallback.srcSet,\n      }\n    )\n\n    if (!output.placeholder) {\n      return\n    }\n\n    output.placeholder.sources.push({\n      media,\n      srcSet: image.placeholder.fallback,\n    })\n  })\n  output.images.sources.push(...images.sources)\n  if (placeholder?.sources) {\n    output.placeholder?.sources.push(...placeholder.sources)\n  }\n  return output\n}\n","import React, { Fragment, FunctionComponent } from \"react\"\nimport terserMacro from \"../../macros/terser.macro\"\nimport { Layout } from \"../image-utils\"\n\nexport interface ILayoutWrapperProps {\n  layout: Layout\n  width: number\n  height: number\n}\n\nconst NativeScriptLoading: FunctionComponent = () => (\n  <script\n    type=\"module\"\n    dangerouslySetInnerHTML={{\n      __html: terserMacro`\nconst hasNativeLazyLoadSupport = typeof HTMLImageElement !== \"undefined\" && \"loading\" in HTMLImageElement.prototype;\nif (hasNativeLazyLoadSupport) {\n  const gatsbyImages = document.querySelectorAll('img[data-main-image]');\n  for (let mainImage of gatsbyImages) {\n    if (mainImage.dataset.src) {\n      mainImage.setAttribute('src', mainImage.dataset.src)\n      mainImage.removeAttribute('data-src')\n    }\n    if (mainImage.dataset.srcset) {\n      mainImage.setAttribute('srcset', mainImage.dataset.srcset)\n      mainImage.removeAttribute('data-srcset')\n    }\n\n    const sources = mainImage.parentNode.querySelectorAll('source[data-srcset]');\n    for (let source of sources) {\n      source.setAttribute('srcset', source.dataset.srcset)\n      source.removeAttribute('data-srcset')\n    }\n\n    if (mainImage.complete) {\n      mainImage.style.opacity = 1;\n\n      // also hide the placeholder\n      mainImage.parentNode.parentNode.querySelector('[data-placeholder-image]').style.opacity = 0;\n    }\n  }\n}\n`,\n    }}\n  />\n)\n\nexport function getSizer(\n  layout: Layout,\n  width: number,\n  height: number\n): string {\n  let sizer = ``\n  if (layout === `fullWidth`) {\n    sizer = `<div aria-hidden=\"true\" style=\"padding-top: ${\n      (height / width) * 100\n    }%;\"></div>`\n  }\n\n  if (layout === `constrained`) {\n    sizer = `<div style=\"max-width: ${width}px; display: block;\"><img alt=\"\" role=\"presentation\" aria-hidden=\"true\" src=\"data:image/svg+xml;charset=utf-8,%3Csvg height='${height}' width='${width}' xmlns='http://www.w3.org/2000/svg' version='1.1'%3E%3C/svg%3E\" style=\"max-width: 100%; display: block; position: static;\"></div>`\n  }\n\n  return sizer\n}\n\nconst Sizer: FunctionComponent<ILayoutWrapperProps> = function Sizer({\n  layout,\n  width,\n  height,\n}) {\n  if (layout === `fullWidth`) {\n    return (\n      <div aria-hidden style={{ paddingTop: `${(height / width) * 100}%` }} />\n    )\n  }\n\n  if (layout === `constrained`) {\n    return (\n      <div style={{ maxWidth: width, display: `block` }}>\n        <img\n          alt=\"\"\n          role=\"presentation\"\n          aria-hidden=\"true\"\n          src={`data:image/svg+xml;charset=utf-8,%3Csvg height='${height}' width='${width}' xmlns='http://www.w3.org/2000/svg' version='1.1'%3E%3C/svg%3E`}\n          style={{\n            maxWidth: `100%`,\n            display: `block`,\n            position: `static`,\n          }}\n        />\n      </div>\n    )\n  }\n\n  return null\n}\n\nexport const LayoutWrapper: FunctionComponent<ILayoutWrapperProps> =\n  function LayoutWrapper({ children, ...props }) {\n    return (\n      <Fragment>\n        <Sizer {...props} />\n        {children}\n\n        {SERVER ? <NativeScriptLoading /> : null}\n      </Fragment>\n    )\n  }\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\n\nexport interface IResponsiveImageProps {\n  sizes?: string\n  srcSet: string\n}\n\nexport type SourceProps = IResponsiveImageProps &\n  (\n    | {\n        media: string\n        type?: string\n      }\n    | {\n        media?: string\n        type: string\n      }\n  )\n\ntype FallbackProps = { src: string } & Partial<IResponsiveImageProps>\n\ntype ImageProps = ImgHTMLAttributes<HTMLImageElement> & {\n  src: string\n  alt: string\n  shouldLoad: boolean\n}\n\nexport type PictureProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: FallbackProps\n  sources?: Array<SourceProps>\n  alt: string\n  shouldLoad?: boolean\n}\n\nconst Image: FunctionComponent<ImageProps> = function Image({\n  src,\n  srcSet,\n  loading,\n  alt = ``,\n  shouldLoad,\n  ...props\n}) {\n  return (\n    <img\n      {...props}\n      decoding=\"async\"\n      loading={loading}\n      src={shouldLoad ? src : undefined}\n      data-src={!shouldLoad ? src : undefined}\n      srcSet={shouldLoad ? srcSet : undefined}\n      data-srcset={!shouldLoad ? srcSet : undefined}\n      alt={alt}\n    />\n  )\n}\n\nexport const Picture: React.FC<PictureProps> = function Picture({\n  fallback,\n  sources = [],\n  shouldLoad = true,\n  ...props\n}) {\n  const sizes = props.sizes || fallback?.sizes\n  const fallbackImage = (\n    <Image {...props} {...fallback} sizes={sizes} shouldLoad={shouldLoad} />\n  )\n\n  if (!sources.length) {\n    return fallbackImage\n  }\n\n  return (\n    <picture>\n      {sources.map(({ media, srcSet, type }) => (\n        <source\n          key={`${media}-${type}-${srcSet}`}\n          type={type}\n          media={media}\n          srcSet={shouldLoad ? srcSet : undefined}\n          data-srcset={!shouldLoad ? srcSet : undefined}\n          sizes={sizes}\n        />\n      ))}\n      {fallbackImage}\n    </picture>\n  )\n}\n\nImage.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  sizes: PropTypes.string,\n  srcSet: PropTypes.string,\n  shouldLoad: PropTypes.bool,\n}\n\nPicture.displayName = `Picture`\nPicture.propTypes = {\n  alt: PropTypes.string.isRequired,\n  shouldLoad: PropTypes.bool,\n  fallback: PropTypes.exact({\n    src: PropTypes.string.isRequired,\n    srcSet: PropTypes.string,\n    sizes: PropTypes.string,\n  }),\n  sources: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.exact({\n        media: PropTypes.string.isRequired,\n        type: PropTypes.string,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n      PropTypes.exact({\n        media: PropTypes.string,\n        type: PropTypes.string.isRequired,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n    ])\n  ),\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\nimport { Picture, SourceProps } from \"./picture\"\n\nexport type PlaceholderProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: string\n  sources?: Array<SourceProps>\n}\n\nexport const Placeholder: FunctionComponent<PlaceholderProps> =\n  function Placeholder({ fallback, ...props }) {\n    if (fallback) {\n      return (\n        <Picture\n          {...props}\n          fallback={{\n            src: fallback,\n          }}\n          aria-hidden\n          alt=\"\"\n        />\n      )\n    } else {\n      return <div {...props}></div>\n    }\n  }\n\nPlaceholder.displayName = `Placeholder`\nPlaceholder.propTypes = {\n  fallback: PropTypes.string,\n  sources: Picture.propTypes?.sources,\n  alt: function (props, propName, componentName): Error | null {\n    if (!props[propName]) {\n      return null\n    }\n\n    return new Error(\n      `Invalid prop \\`${propName}\\` supplied to \\`${componentName}\\`. Validation failed.`\n    )\n  },\n}\n","import React from \"react\"\nimport { Picture, PictureProps } from \"./picture\"\n\nexport type MainImageProps = PictureProps\n\nexport const MainImage: React.FC<PictureProps> = function MainImage(props) {\n  return (\n    <>\n      <Picture {...props} />\n      <noscript>\n        <Picture {...props} shouldLoad={true} />\n      </noscript>\n    </>\n  )\n}\n\nMainImage.displayName = `MainImage`\nMainImage.propTypes = Picture.propTypes\n","import React from \"react\"\nimport { getWrapperProps, getMainProps, getPlaceholderProps } from \"./hooks\"\nimport { Placeholder } from \"./placeholder\"\nimport { MainImage, MainImageProps } from \"./main-image\"\nimport { LayoutWrapper } from \"./layout-wrapper\"\nimport PropTypes from \"prop-types\"\nimport type { FunctionComponent, WeakValidationMap } from \"react\"\nimport type { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\n\nconst removeNewLines = (str: string): string => str.replace(/\\n/g, ``)\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> =\n  function GatsbyImage({\n    as = `div`,\n    className,\n    class: preactClass,\n    style,\n    image,\n    loading = `lazy`,\n    imgClassName,\n    imgStyle,\n    backgroundColor,\n    objectFit,\n    objectPosition,\n    ...props\n  }) {\n    if (!image) {\n      console.warn(`[gatsby-plugin-image] Missing image prop`)\n      return null\n    }\n\n    if (preactClass) {\n      className = preactClass\n    }\n\n    imgStyle = {\n      objectFit,\n      objectPosition,\n      backgroundColor,\n      ...imgStyle,\n    }\n\n    const {\n      width,\n      height,\n      layout,\n      images,\n      placeholder,\n      backgroundColor: placeholderBackgroundColor,\n    } = image\n\n    const {\n      style: wStyle,\n      className: wClass,\n      ...wrapperProps\n    } = getWrapperProps(width, height, layout)\n\n    const cleanedImages: IGatsbyImageData[\"images\"] = {\n      fallback: undefined,\n      sources: [],\n    }\n    if (images.fallback) {\n      cleanedImages.fallback = {\n        ...images.fallback,\n        srcSet: images.fallback.srcSet\n          ? removeNewLines(images.fallback.srcSet)\n          : undefined,\n      }\n    }\n\n    if (images.sources) {\n      cleanedImages.sources = images.sources.map(source => {\n        return {\n          ...source,\n          srcSet: removeNewLines(source.srcSet),\n        }\n      })\n    }\n\n    return React.createElement(\n      as,\n      {\n        ...wrapperProps,\n        style: {\n          ...wStyle,\n          ...style,\n          backgroundColor,\n        },\n        className: `${wClass}${className ? ` ${className}` : ``}`,\n      },\n      <LayoutWrapper layout={layout} width={width} height={height}>\n        <Placeholder\n          {...getPlaceholderProps(\n            placeholder,\n            false,\n            layout,\n            width,\n            height,\n            placeholderBackgroundColor,\n            objectFit,\n            objectPosition\n          )}\n        />\n\n        <MainImage\n          data-gatsby-image-ssr=\"\"\n          className={imgClassName}\n          {...(props as Omit<\n            MainImageProps,\n            \"images\" | \"fallback\" | \"onError\" | \"onLoad\"\n          >)}\n          // When eager is set we want to start the isLoading state on true (we want to load the img without react)\n          {...getMainProps(\n            loading === `eager`,\n            false,\n            cleanedImages,\n            loading,\n            imgStyle\n          )}\n        />\n      </LayoutWrapper>\n    )\n  }\n\nexport const altValidator: PropTypes.Validator<string> = (\n  props: GatsbyImageProps,\n  propName,\n  componentName,\n  ...rest\n): Error | undefined => {\n  if (!props.alt && props.alt !== ``) {\n    return new Error(\n      `The \"alt\" prop is required in ${componentName}. If the image is purely presentational then pass an empty string: e.g. alt=\"\". Learn more: https://a11y-style-guide.com/style-guide/section-media.html`\n    )\n  }\n\n  return PropTypes.string(props, propName, componentName, ...rest)\n}\n\nexport const propTypes = {\n  image: PropTypes.object.isRequired,\n  alt: altValidator,\n} as WeakValidationMap<GatsbyImageProps>\n","import {\n  createElement,\n  memo,\n  useMemo,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n} from \"react\"\nimport {\n  getWrapperProps,\n  gatsbyImageIsInstalled,\n  hasNativeLazyLoadSupport,\n} from \"./hooks\"\nimport { getSizer } from \"./layout-wrapper\"\nimport { propTypes } from \"./gatsby-image.server\"\nimport type {\n  FC,\n  ElementType,\n  FunctionComponent,\n  ImgHTMLAttributes,\n  CSSProperties,\n  ReactEventHandler,\n} from \"react\"\nimport type { renderImageToString } from \"./lazy-hydrate\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { Layout } from \"../image-utils\"\n\nconst imageCache = new Set<string>()\nlet renderImageToStringPromise\nlet renderImage: typeof renderImageToString | undefined\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport interface GatsbyImageProps\n  extends Omit<\n    ImgHTMLAttributes<HTMLImageElement>,\n    \"placeholder\" | \"onLoad\" | \"src\" | \"srcSet\" | \"width\" | \"height\"\n  > {\n  alt: string\n  as?: ElementType\n  className?: string\n  class?: string\n  imgClassName?: string\n  image: IGatsbyImageData\n  imgStyle?: CSSProperties\n  backgroundColor?: string\n  objectFit?: CSSProperties[\"objectFit\"]\n  objectPosition?: CSSProperties[\"objectPosition\"]\n  onLoad?: (props: { wasCached: boolean }) => void\n  onError?: ReactEventHandler<HTMLImageElement>\n  onStartLoad?: (props: { wasCached: boolean }) => void\n}\n\nexport interface IGatsbyImageData {\n  layout: Layout\n  width: number\n  height: number\n  backgroundColor?: string\n  images: Pick<MainImageProps, \"sources\" | \"fallback\">\n  placeholder?: Pick<PlaceholderProps, \"sources\" | \"fallback\">\n}\n\nconst GatsbyImageHydrator: FC<GatsbyImageProps> = function GatsbyImageHydrator({\n  as = `div`,\n  image,\n  style,\n  backgroundColor,\n  className,\n  class: preactClass,\n  onStartLoad,\n  onLoad,\n  onError,\n  ...props\n}) {\n  const { width, height, layout } = image\n  const {\n    style: wStyle,\n    className: wClass,\n    ...wrapperProps\n  } = getWrapperProps(width, height, layout)\n  const root = useRef<HTMLElement>()\n  const cacheKey = useMemo(() => JSON.stringify(image.images), [image.images])\n\n  // Preact uses class instead of className so we need to check for both\n  if (preactClass) {\n    className = preactClass\n  }\n\n  const sizer = getSizer(layout, width, height)\n\n  useEffect(() => {\n    if (!renderImageToStringPromise) {\n      renderImageToStringPromise = import(`./lazy-hydrate`).then(\n        ({ renderImageToString, swapPlaceholderImage }) => {\n          renderImage = renderImageToString\n\n          return {\n            renderImageToString,\n            swapPlaceholderImage,\n          }\n        }\n      )\n    }\n\n    // The plugin image component is a bit special where if it's server-side rendered, we add extra script tags to support lazy-loading without\n    // In this case we stop hydration but fire the correct events.\n    const ssrImage = root.current.querySelector(\n      `[data-gatsby-image-ssr]`\n    ) as HTMLImageElement\n    if (ssrImage && hasNativeLazyLoadSupport()) {\n      if (ssrImage.complete) {\n        // Trigger onStartload and onLoad events\n        onStartLoad?.({\n          wasCached: true,\n        })\n        onLoad?.({\n          wasCached: true,\n        })\n\n        // remove ssr key for state updates but add delay to not fight with native code snippt of gatsby-ssr\n        setTimeout(() => {\n          ssrImage.removeAttribute(`data-gatsby-image-ssr`)\n        }, 0)\n      } else {\n        onStartLoad?.({\n          wasCached: true,\n        })\n\n        ssrImage.addEventListener(`load`, function onLoadListener() {\n          ssrImage.removeEventListener(`load`, onLoadListener)\n\n          onLoad?.({\n            wasCached: true,\n          })\n          // remove ssr key for state updates but add delay to not fight with native code snippt of gatsby-ssr\n          setTimeout(() => {\n            ssrImage.removeAttribute(`data-gatsby-image-ssr`)\n          }, 0)\n        })\n      }\n\n      imageCache.add(cacheKey)\n\n      return\n    }\n\n    if (renderImage && imageCache.has(cacheKey)) {\n      return\n    }\n\n    let animationFrame\n    let cleanupCallback\n    renderImageToStringPromise.then(\n      ({ renderImageToString, swapPlaceholderImage }) => {\n        if (!root.current) {\n          return\n        }\n\n        root.current.innerHTML = renderImageToString({\n          isLoading: true,\n          isLoaded: imageCache.has(cacheKey),\n          image,\n          ...props,\n        })\n\n        if (!imageCache.has(cacheKey)) {\n          animationFrame = requestAnimationFrame(() => {\n            if (root.current) {\n              cleanupCallback = swapPlaceholderImage(\n                root.current,\n                cacheKey,\n                imageCache,\n                style,\n                onStartLoad,\n                onLoad,\n                onError\n              )\n            }\n          })\n        }\n      }\n    )\n\n    // eslint-disable-next-line consistent-return\n    return (): void => {\n      if (animationFrame) {\n        cancelAnimationFrame(animationFrame)\n      }\n      if (cleanupCallback) {\n        cleanupCallback()\n      }\n    }\n  }, [image])\n\n  // useLayoutEffect is ran before React commits to the DOM. This allows us to make sure our HTML is using our cached image version\n  useLayoutEffect(() => {\n    if (imageCache.has(cacheKey) && renderImage) {\n      root.current.innerHTML = renderImage({\n        isLoading: imageCache.has(cacheKey),\n        isLoaded: imageCache.has(cacheKey),\n        image,\n        ...props,\n      })\n\n      // Trigger onStartload and onLoad events\n      onStartLoad?.({\n        wasCached: true,\n      })\n      onLoad?.({\n        wasCached: true,\n      })\n    }\n  }, [image])\n\n  // By keeping all props equal React will keep the component in the DOM\n  return createElement(as, {\n    ...wrapperProps,\n    style: {\n      ...wStyle,\n      ...style,\n      backgroundColor,\n    },\n    className: `${wClass}${className ? ` ${className}` : ``}`,\n    ref: root,\n    dangerouslySetInnerHTML: {\n      __html: sizer,\n    },\n    suppressHydrationWarning: true,\n  })\n}\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> = memo(\n  function GatsbyImage(props) {\n    if (!props.image) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(`[gatsby-plugin-image] Missing image prop`)\n      }\n\n      return null\n    }\n\n    if (!gatsbyImageIsInstalled() && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `[gatsby-plugin-image] You're missing out on some cool performance features. Please add \"gatsby-plugin-image\" to your gatsby-config.js`\n      )\n    }\n\n    return createElement(GatsbyImageHydrator, props)\n  }\n)\n\nGatsbyImage.propTypes = propTypes\nGatsbyImage.displayName = `GatsbyImage`\n","import React, { FunctionComponent, ReactElement } from \"react\"\nimport {\n  altValidator,\n  GatsbyImage as GatsbyImageServer,\n} from \"./gatsby-image.server\"\nimport { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\nimport PropTypes from \"prop-types\"\nimport { ISharpGatsbyImageArgs } from \"../image-utils\"\n\nexport interface IStaticImageProps\n  extends Omit<GatsbyImageProps, \"image\">,\n    Omit<ISharpGatsbyImageArgs, \"backgroundColor\"> {\n  src: string\n}\n\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nexport function _getStaticImage(\n  GatsbyImage: FunctionComponent<GatsbyImageProps>\n): React.FC<IStaticImageProps & IPrivateProps> {\n  return function StaticImage({\n    src,\n    __imageData: imageData,\n    __error,\n    // We extract these because they're not meant to be passed-down to GatsbyImage\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    width,\n    height,\n    aspectRatio,\n    tracedSVGOptions,\n    placeholder,\n    formats,\n    quality,\n    transformOptions,\n    jpgOptions,\n    pngOptions,\n    webpOptions,\n    avifOptions,\n    blurredOptions,\n    breakpoints,\n    outputPixelDensities,\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    ...props\n  }): ReactElement {\n    if (__error) {\n      console.warn(__error)\n    }\n\n    if (imageData) {\n      return <GatsbyImage image={imageData} {...props} />\n    }\n    console.warn(`Image not loaded`, src)\n    if (!__error && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `Please ensure that \"gatsby-plugin-image\" is included in the plugins array in gatsby-config.js, and that your version of gatsby is at least 2.24.78`\n      )\n    }\n    return null\n  }\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageServer)\n\nconst checkDimensionProps: PropTypes.Validator<number> = (\n  props: IStaticImageProps & IPrivateProps,\n  propName: keyof IStaticImageProps & IPrivateProps,\n  ...rest\n) => {\n  if (\n    props.layout === `fullWidth` &&\n    (propName === `width` || propName === `height`) &&\n    props[propName]\n  ) {\n    return new Error(\n      `\"${propName}\" ${props[propName]} may not be passed when layout is fullWidth.`\n    )\n  }\n  return PropTypes.number(props, propName, ...rest)\n}\n\nconst validLayouts = new Set([`fixed`, `fullWidth`, `constrained`])\n\nexport const propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: altValidator,\n  width: checkDimensionProps,\n  height: checkDimensionProps,\n  sizes: PropTypes.string,\n  layout: (props: IStaticImageProps & IPrivateProps): Error | undefined => {\n    if (props.layout === undefined) {\n      return undefined\n    }\n    if (validLayouts.has(props.layout)) {\n      return undefined\n    }\n\n    return new Error(\n      `Invalid value ${props.layout}\" provided for prop \"layout\". Defaulting to \"constrained\". Valid values are \"fixed\", \"fullWidth\" or \"constrained\".`\n    )\n  },\n}\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","import {\n  GatsbyImage as GatsbyImageBrowser,\n  IGatsbyImageData,\n} from \"./gatsby-image.browser\"\nimport React from \"react\"\nimport {\n  _getStaticImage,\n  propTypes,\n  IStaticImageProps,\n} from \"./static-image.server\"\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageBrowser)\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","import { graphql, Link, StaticQuery } from 'gatsby';\nimport { GatsbyImage } from 'gatsby-plugin-image';\nimport React, { forwardRef } from 'react';\nimport './index.scss';\n\nexport const Bio = forwardRef<HTMLDivElement>((_props, ref) => {\n  return (\n    <StaticQuery\n      query={bioQuery}\n      render={(data) => {\n        const { author, social, introduction } = data.site.siteMetadata;\n\n        return (\n          <div ref={ref} className=\"bio\">\n            <div className=\"author\">\n              <div className=\"author-description\">\n                <GatsbyImage\n                  className=\"author-image\"\n                  image={data.avatar.childImageSharp.gatsbyImageData}\n                  alt={author}\n                  style={{\n                    borderRadius: `100%`,\n                  }}\n                />\n                <div className=\"author-name\">\n                  <span className=\"author-name-prefix\">Frontend Developer</span>\n                  <Link to={'/about'} className=\"author-name-content\">\n                    <span>@{author}</span>\n                  </Link>\n                  <div className=\"author-introduction\">{introduction}</div>\n                  <p className=\"author-socials\">\n                    {social.github && <a href={`https://github.com/${social.github}`}>✤ GitHub</a>}\n                    {social.instagram && (\n                      <a href={`https://www.instagram.com/${social.instagram}`}>✤ Instagram</a>\n                    )}\n                    {social.facebook && (\n                      <a href={`https://www.facebook.com/${social.facebook}`}>✤ Facebook</a>\n                    )}\n                    {social.linkedin && (\n                      <a href={`https://www.linkedin.com/in/${social.linkedin}/`}>✤ LinkedIn</a>\n                    )}\n                  </p>\n                </div>\n              </div>\n            </div>\n          </div>\n        );\n      }}\n    />\n  );\n});\n\nconst bioQuery = graphql`\n  query BioQuery {\n    avatar: file(absolutePath: { regex: \"/profile.png/\" }) {\n      childImageSharp {\n        gatsbyImageData(layout: FIXED, width: 72, height: 72)\n      }\n    }\n    site {\n      siteMetadata {\n        author\n        introduction\n        social {\n          github\n          facebook\n          linkedin\n          instagram\n        }\n      }\n    }\n  }\n`;\n\nexport default Bio;\n","import SmoothScroll from \"smooth-scroll/dist/smooth-scroll.min\";\nimport smoothscroll from \"smoothscroll-polyfill\";\n\nlet scroll;\n\nexport function init() {\n  smoothscroll.polyfill();\n  scroll = new SmoothScroll('a[href*=\"#\"]', {\n    speed: 500,\n    speedAsDuration: true,\n  });\n  return scroll;\n}\n\nexport function destroy() {\n  if (!scroll) throw Error(\"Not founded SmoothScroll instance\");\n\n  scroll.destroy();\n  scroll = null;\n\n  return scroll;\n}\n\nexport function go(dest) {\n  if (!scroll) throw Error(\"Not founded SmoothScroll instance\");\n\n  scroll.animateScroll(dest);\n\n  return scroll;\n}\n","/*! smooth-scroll v16.1.3 | (c) 2020 Chris Ferdinandi | MIT License | http://github.com/cferdinandi/smooth-scroll */\n!(function(e,t){\"function\"==typeof define&&define.amd?define([],(function(){return t(e)})):\"object\"==typeof exports?module.exports=t(e):e.SmoothScroll=t(e)})(\"undefined\"!=typeof global?global:\"undefined\"!=typeof window?window:this,(function(C){\"use strict\";var w={ignore:\"[data-scroll-ignore]\",header:null,topOnEmptyHash:!0,speed:500,speedAsDuration:!1,durationMax:null,durationMin:null,clip:!0,offset:0,easing:\"easeInOutCubic\",customEasing:null,updateURL:!0,popstate:!0,emitEvents:!0},L=function(){var n={};return Array.prototype.forEach.call(arguments,(function(e){for(var t in e){if(!e.hasOwnProperty(t))return;n[t]=e[t]}})),n},r=function(e){\"#\"===e.charAt(0)&&(e=e.substr(1));for(var t,n=String(e),o=n.length,a=-1,r=\"\",i=n.charCodeAt(0);++a<o;){if(0===(t=n.charCodeAt(a)))throw new InvalidCharacterError(\"Invalid character: the input contains U+0000.\");1<=t&&t<=31||127==t||0===a&&48<=t&&t<=57||1===a&&48<=t&&t<=57&&45===i?r+=\"\\\\\"+t.toString(16)+\" \":r+=128<=t||45===t||95===t||48<=t&&t<=57||65<=t&&t<=90||97<=t&&t<=122?n.charAt(a):\"\\\\\"+n.charAt(a)}return\"#\"+r},H=function(){return Math.max(document.body.scrollHeight,document.documentElement.scrollHeight,document.body.offsetHeight,document.documentElement.offsetHeight,document.body.clientHeight,document.documentElement.clientHeight)},q=function(e){return e?(t=e,parseInt(C.getComputedStyle(t).height,10)+e.offsetTop):0;var t},x=function(e,t,n){0===e&&document.body.focus(),n||(e.focus(),document.activeElement!==e&&(e.setAttribute(\"tabindex\",\"-1\"),e.focus(),e.style.outline=\"none\"),C.scrollTo(0,t))},Q=function(e,t,n,o){if(t.emitEvents&&\"function\"==typeof C.CustomEvent){var a=new CustomEvent(e,{bubbles:!0,detail:{anchor:n,toggle:o}});document.dispatchEvent(a)}};return function(o,e){var O,a,I,M,A={};A.cancelScroll=function(e){cancelAnimationFrame(M),M=null,e||Q(\"scrollCancel\",O)},A.animateScroll=function(a,r,e){A.cancelScroll();var i=L(O||w,e||{}),s=\"[object Number]\"===Object.prototype.toString.call(a),t=s||!a.tagName?null:a;if(s||t){var c=C.pageYOffset;i.header&&!I&&(I=document.querySelector(i.header));var n,o,u,l,d,f,m,h,p=q(I),g=s?a:(function(e,t,n,o){var a=0;if(e.offsetParent)for(;a+=e.offsetTop,e=e.offsetParent;);return a=Math.max(a-t-n,0),o&&(a=Math.min(a,H()-C.innerHeight)),a})(t,p,parseInt(\"function\"==typeof i.offset?i.offset(a,r):i.offset,10),i.clip),y=g-c,v=H(),S=0,E=(n=y,u=(o=i).speedAsDuration?o.speed:Math.abs(n/1e3*o.speed),o.durationMax&&u>o.durationMax?o.durationMax:o.durationMin&&u<o.durationMin?o.durationMin:parseInt(u,10)),b=function(e){var t,n,o;l||(l=e),S+=e-l,f=c+y*(n=d=1<(d=0===E?0:S/E)?1:d,\"easeInQuad\"===(t=i).easing&&(o=n*n),\"easeOutQuad\"===t.easing&&(o=n*(2-n)),\"easeInOutQuad\"===t.easing&&(o=n<.5?2*n*n:(4-2*n)*n-1),\"easeInCubic\"===t.easing&&(o=n*n*n),\"easeOutCubic\"===t.easing&&(o=--n*n*n+1),\"easeInOutCubic\"===t.easing&&(o=n<.5?4*n*n*n:(n-1)*(2*n-2)*(2*n-2)+1),\"easeInQuart\"===t.easing&&(o=n*n*n*n),\"easeOutQuart\"===t.easing&&(o=1- --n*n*n*n),\"easeInOutQuart\"===t.easing&&(o=n<.5?8*n*n*n*n:1-8*--n*n*n*n),\"easeInQuint\"===t.easing&&(o=n*n*n*n*n),\"easeOutQuint\"===t.easing&&(o=1+--n*n*n*n*n),\"easeInOutQuint\"===t.easing&&(o=n<.5?16*n*n*n*n*n:1+16*--n*n*n*n*n),t.customEasing&&(o=t.customEasing(n)),o||n),C.scrollTo(0,Math.floor(f)),(function(e,t){var n=C.pageYOffset;if(e==t||n==t||(c<t&&C.innerHeight+n)>=v)return A.cancelScroll(!0),x(a,t,s),Q(\"scrollStop\",i,a,r),!(M=l=null)})(f,g)||(M=C.requestAnimationFrame(b),l=e)};0===C.pageYOffset&&C.scrollTo(0,0),m=a,h=i,s||history.pushState&&h.updateURL&&history.pushState({smoothScroll:JSON.stringify(h),anchor:m.id},document.title,m===document.documentElement?\"#top\":\"#\"+m.id),\"matchMedia\"in C&&C.matchMedia(\"(prefers-reduced-motion)\").matches?x(a,Math.floor(g),!1):(Q(\"scrollStart\",i,a,r),A.cancelScroll(!0),C.requestAnimationFrame(b))}};var t=function(e){if(!e.defaultPrevented&&!(0!==e.button||e.metaKey||e.ctrlKey||e.shiftKey)&&\"closest\"in e.target&&(a=e.target.closest(o))&&\"a\"===a.tagName.toLowerCase()&&!e.target.closest(O.ignore)&&a.hostname===C.location.hostname&&a.pathname===C.location.pathname&&/#/.test(a.href)){var t,n;try{t=r(decodeURIComponent(a.hash))}catch(e){t=r(a.hash)}if(\"#\"===t){if(!O.topOnEmptyHash)return;n=document.documentElement}else n=document.querySelector(t);(n=n||\"#top\"!==t?n:document.documentElement)&&(e.preventDefault(),(function(e){if(history.replaceState&&e.updateURL&&!history.state){var t=C.location.hash;t=t||\"\",history.replaceState({smoothScroll:JSON.stringify(e),anchor:t||C.pageYOffset},document.title,t||C.location.href)}})(O),A.animateScroll(n,a))}},n=function(e){if(null!==history.state&&history.state.smoothScroll&&history.state.smoothScroll===JSON.stringify(O)){var t=history.state.anchor;\"string\"==typeof t&&t&&!(t=document.querySelector(r(history.state.anchor)))||A.animateScroll(t,null,{updateURL:!1})}};A.destroy=function(){O&&(document.removeEventListener(\"click\",t,!1),C.removeEventListener(\"popstate\",n,!1),A.cancelScroll(),M=I=a=O=null)};return (function(){if(!(\"querySelector\"in document&&\"addEventListener\"in C&&\"requestAnimationFrame\"in C&&\"closest\"in C.Element.prototype))throw\"Smooth Scroll: This browser does not support the required JavaScript methods and browser APIs.\";A.destroy(),O=L(w,e||{}),I=O.header?document.querySelector(O.header):null,document.addEventListener(\"click\",t,!1),O.updateURL&&O.popstate&&C.addEventListener(\"popstate\",n,!1)})(),A}}));","/* smoothscroll v0.4.4 - 2019 - Dustan Kasten, Jeremias Menichelli - MIT License */\n(function () {\n  'use strict';\n\n  // polyfill\n  function polyfill() {\n    // aliases\n    var w = window;\n    var d = document;\n\n    // return if scroll behavior is supported and polyfill is not forced\n    if (\n      'scrollBehavior' in d.documentElement.style &&\n      w.__forceSmoothScrollPolyfill__ !== true\n    ) {\n      return;\n    }\n\n    // globals\n    var Element = w.HTMLElement || w.Element;\n    var SCROLL_TIME = 468;\n\n    // object gathering original scroll methods\n    var original = {\n      scroll: w.scroll || w.scrollTo,\n      scrollBy: w.scrollBy,\n      elementScroll: Element.prototype.scroll || scrollElement,\n      scrollIntoView: Element.prototype.scrollIntoView\n    };\n\n    // define timing method\n    var now =\n      w.performance && w.performance.now\n        ? w.performance.now.bind(w.performance)\n        : Date.now;\n\n    /**\n     * indicates if a the current browser is made by Microsoft\n     * @method isMicrosoftBrowser\n     * @param {String} userAgent\n     * @returns {Boolean}\n     */\n    function isMicrosoftBrowser(userAgent) {\n      var userAgentPatterns = ['MSIE ', 'Trident/', 'Edge/'];\n\n      return new RegExp(userAgentPatterns.join('|')).test(userAgent);\n    }\n\n    /*\n     * IE has rounding bug rounding down clientHeight and clientWidth and\n     * rounding up scrollHeight and scrollWidth causing false positives\n     * on hasScrollableSpace\n     */\n    var ROUNDING_TOLERANCE = isMicrosoftBrowser(w.navigator.userAgent) ? 1 : 0;\n\n    /**\n     * changes scroll position inside an element\n     * @method scrollElement\n     * @param {Number} x\n     * @param {Number} y\n     * @returns {undefined}\n     */\n    function scrollElement(x, y) {\n      this.scrollLeft = x;\n      this.scrollTop = y;\n    }\n\n    /**\n     * returns result of applying ease math function to a number\n     * @method ease\n     * @param {Number} k\n     * @returns {Number}\n     */\n    function ease(k) {\n      return 0.5 * (1 - Math.cos(Math.PI * k));\n    }\n\n    /**\n     * indicates if a smooth behavior should be applied\n     * @method shouldBailOut\n     * @param {Number|Object} firstArg\n     * @returns {Boolean}\n     */\n    function shouldBailOut(firstArg) {\n      if (\n        firstArg === null ||\n        typeof firstArg !== 'object' ||\n        firstArg.behavior === undefined ||\n        firstArg.behavior === 'auto' ||\n        firstArg.behavior === 'instant'\n      ) {\n        // first argument is not an object/null\n        // or behavior is auto, instant or undefined\n        return true;\n      }\n\n      if (typeof firstArg === 'object' && firstArg.behavior === 'smooth') {\n        // first argument is an object and behavior is smooth\n        return false;\n      }\n\n      // throw error when behavior is not supported\n      throw new TypeError(\n        'behavior member of ScrollOptions ' +\n          firstArg.behavior +\n          ' is not a valid value for enumeration ScrollBehavior.'\n      );\n    }\n\n    /**\n     * indicates if an element has scrollable space in the provided axis\n     * @method hasScrollableSpace\n     * @param {Node} el\n     * @param {String} axis\n     * @returns {Boolean}\n     */\n    function hasScrollableSpace(el, axis) {\n      if (axis === 'Y') {\n        return el.clientHeight + ROUNDING_TOLERANCE < el.scrollHeight;\n      }\n\n      if (axis === 'X') {\n        return el.clientWidth + ROUNDING_TOLERANCE < el.scrollWidth;\n      }\n    }\n\n    /**\n     * indicates if an element has a scrollable overflow property in the axis\n     * @method canOverflow\n     * @param {Node} el\n     * @param {String} axis\n     * @returns {Boolean}\n     */\n    function canOverflow(el, axis) {\n      var overflowValue = w.getComputedStyle(el, null)['overflow' + axis];\n\n      return overflowValue === 'auto' || overflowValue === 'scroll';\n    }\n\n    /**\n     * indicates if an element can be scrolled in either axis\n     * @method isScrollable\n     * @param {Node} el\n     * @param {String} axis\n     * @returns {Boolean}\n     */\n    function isScrollable(el) {\n      var isScrollableY = hasScrollableSpace(el, 'Y') && canOverflow(el, 'Y');\n      var isScrollableX = hasScrollableSpace(el, 'X') && canOverflow(el, 'X');\n\n      return isScrollableY || isScrollableX;\n    }\n\n    /**\n     * finds scrollable parent of an element\n     * @method findScrollableParent\n     * @param {Node} el\n     * @returns {Node} el\n     */\n    function findScrollableParent(el) {\n      while (el !== d.body && isScrollable(el) === false) {\n        el = el.parentNode || el.host;\n      }\n\n      return el;\n    }\n\n    /**\n     * self invoked function that, given a context, steps through scrolling\n     * @method step\n     * @param {Object} context\n     * @returns {undefined}\n     */\n    function step(context) {\n      var time = now();\n      var value;\n      var currentX;\n      var currentY;\n      var elapsed = (time - context.startTime) / SCROLL_TIME;\n\n      // avoid elapsed times higher than one\n      elapsed = elapsed > 1 ? 1 : elapsed;\n\n      // apply easing to elapsed time\n      value = ease(elapsed);\n\n      currentX = context.startX + (context.x - context.startX) * value;\n      currentY = context.startY + (context.y - context.startY) * value;\n\n      context.method.call(context.scrollable, currentX, currentY);\n\n      // scroll more if we have not reached our destination\n      if (currentX !== context.x || currentY !== context.y) {\n        w.requestAnimationFrame(step.bind(w, context));\n      }\n    }\n\n    /**\n     * scrolls window or element with a smooth behavior\n     * @method smoothScroll\n     * @param {Object|Node} el\n     * @param {Number} x\n     * @param {Number} y\n     * @returns {undefined}\n     */\n    function smoothScroll(el, x, y) {\n      var scrollable;\n      var startX;\n      var startY;\n      var method;\n      var startTime = now();\n\n      // define scroll context\n      if (el === d.body) {\n        scrollable = w;\n        startX = w.scrollX || w.pageXOffset;\n        startY = w.scrollY || w.pageYOffset;\n        method = original.scroll;\n      } else {\n        scrollable = el;\n        startX = el.scrollLeft;\n        startY = el.scrollTop;\n        method = scrollElement;\n      }\n\n      // scroll looping over a frame\n      step({\n        scrollable: scrollable,\n        method: method,\n        startTime: startTime,\n        startX: startX,\n        startY: startY,\n        x: x,\n        y: y\n      });\n    }\n\n    // ORIGINAL METHODS OVERRIDES\n    // w.scroll and w.scrollTo\n    w.scroll = w.scrollTo = function() {\n      // avoid action when no arguments are passed\n      if (arguments[0] === undefined) {\n        return;\n      }\n\n      // avoid smooth behavior if not required\n      if (shouldBailOut(arguments[0]) === true) {\n        original.scroll.call(\n          w,\n          arguments[0].left !== undefined\n            ? arguments[0].left\n            : typeof arguments[0] !== 'object'\n              ? arguments[0]\n              : w.scrollX || w.pageXOffset,\n          // use top prop, second argument if present or fallback to scrollY\n          arguments[0].top !== undefined\n            ? arguments[0].top\n            : arguments[1] !== undefined\n              ? arguments[1]\n              : w.scrollY || w.pageYOffset\n        );\n\n        return;\n      }\n\n      // LET THE SMOOTHNESS BEGIN!\n      smoothScroll.call(\n        w,\n        d.body,\n        arguments[0].left !== undefined\n          ? ~~arguments[0].left\n          : w.scrollX || w.pageXOffset,\n        arguments[0].top !== undefined\n          ? ~~arguments[0].top\n          : w.scrollY || w.pageYOffset\n      );\n    };\n\n    // w.scrollBy\n    w.scrollBy = function() {\n      // avoid action when no arguments are passed\n      if (arguments[0] === undefined) {\n        return;\n      }\n\n      // avoid smooth behavior if not required\n      if (shouldBailOut(arguments[0])) {\n        original.scrollBy.call(\n          w,\n          arguments[0].left !== undefined\n            ? arguments[0].left\n            : typeof arguments[0] !== 'object' ? arguments[0] : 0,\n          arguments[0].top !== undefined\n            ? arguments[0].top\n            : arguments[1] !== undefined ? arguments[1] : 0\n        );\n\n        return;\n      }\n\n      // LET THE SMOOTHNESS BEGIN!\n      smoothScroll.call(\n        w,\n        d.body,\n        ~~arguments[0].left + (w.scrollX || w.pageXOffset),\n        ~~arguments[0].top + (w.scrollY || w.pageYOffset)\n      );\n    };\n\n    // Element.prototype.scroll and Element.prototype.scrollTo\n    Element.prototype.scroll = Element.prototype.scrollTo = function() {\n      // avoid action when no arguments are passed\n      if (arguments[0] === undefined) {\n        return;\n      }\n\n      // avoid smooth behavior if not required\n      if (shouldBailOut(arguments[0]) === true) {\n        // if one number is passed, throw error to match Firefox implementation\n        if (typeof arguments[0] === 'number' && arguments[1] === undefined) {\n          throw new SyntaxError('Value could not be converted');\n        }\n\n        original.elementScroll.call(\n          this,\n          // use left prop, first number argument or fallback to scrollLeft\n          arguments[0].left !== undefined\n            ? ~~arguments[0].left\n            : typeof arguments[0] !== 'object' ? ~~arguments[0] : this.scrollLeft,\n          // use top prop, second argument or fallback to scrollTop\n          arguments[0].top !== undefined\n            ? ~~arguments[0].top\n            : arguments[1] !== undefined ? ~~arguments[1] : this.scrollTop\n        );\n\n        return;\n      }\n\n      var left = arguments[0].left;\n      var top = arguments[0].top;\n\n      // LET THE SMOOTHNESS BEGIN!\n      smoothScroll.call(\n        this,\n        this,\n        typeof left === 'undefined' ? this.scrollLeft : ~~left,\n        typeof top === 'undefined' ? this.scrollTop : ~~top\n      );\n    };\n\n    // Element.prototype.scrollBy\n    Element.prototype.scrollBy = function() {\n      // avoid action when no arguments are passed\n      if (arguments[0] === undefined) {\n        return;\n      }\n\n      // avoid smooth behavior if not required\n      if (shouldBailOut(arguments[0]) === true) {\n        original.elementScroll.call(\n          this,\n          arguments[0].left !== undefined\n            ? ~~arguments[0].left + this.scrollLeft\n            : ~~arguments[0] + this.scrollLeft,\n          arguments[0].top !== undefined\n            ? ~~arguments[0].top + this.scrollTop\n            : ~~arguments[1] + this.scrollTop\n        );\n\n        return;\n      }\n\n      this.scroll({\n        left: ~~arguments[0].left + this.scrollLeft,\n        top: ~~arguments[0].top + this.scrollTop,\n        behavior: arguments[0].behavior\n      });\n    };\n\n    // Element.prototype.scrollIntoView\n    Element.prototype.scrollIntoView = function() {\n      // avoid smooth behavior if not required\n      if (shouldBailOut(arguments[0]) === true) {\n        original.scrollIntoView.call(\n          this,\n          arguments[0] === undefined ? true : arguments[0]\n        );\n\n        return;\n      }\n\n      // LET THE SMOOTHNESS BEGIN!\n      var scrollableParent = findScrollableParent(this);\n      var parentRects = scrollableParent.getBoundingClientRect();\n      var clientRects = this.getBoundingClientRect();\n\n      if (scrollableParent !== d.body) {\n        // reveal element inside parent\n        smoothScroll.call(\n          this,\n          scrollableParent,\n          scrollableParent.scrollLeft + clientRects.left - parentRects.left,\n          scrollableParent.scrollTop + clientRects.top - parentRects.top\n        );\n\n        // reveal parent in viewport unless is fixed\n        if (w.getComputedStyle(scrollableParent).position !== 'fixed') {\n          w.scrollBy({\n            left: parentRects.left,\n            top: parentRects.top,\n            behavior: 'smooth'\n          });\n        }\n      } else {\n        // reveal element in viewport\n        w.scrollBy({\n          left: clientRects.left,\n          top: clientRects.top,\n          behavior: 'smooth'\n        });\n      }\n    };\n  }\n\n  if (typeof exports === 'object' && typeof module !== 'undefined') {\n    // commonjs\n    module.exports = { polyfill: polyfill };\n  } else {\n    // global\n    polyfill();\n  }\n\n}());\n"],"names":["camelCase","input","options","Array","isArray","TypeError","Object","assign","pascalCase","map","x","trim","filter","length","join","toUpperCase","toLowerCase","string","isLastCharLower","isLastCharUpper","isLastLastCharUpper","i","character","test","slice","preserveCamelCase","replace","_","p1","m","charAt","module","exports","N","height","HTMLImageElement","prototype","j","e","t","a","r","u","loading","shouldLoad","style","opacity","O","n","s","o","l","backgroundColor","width","position","top","left","bottom","right","objectFit","objectPosition","d","transition","z","D","_ref5","layout","paddingTop","maxWidth","display","alt","role","src","A","children","c","q","P","H","srcSet","decoding","G","fallback","sources","sizes","_ref6","media","type","key","V","propTypes","isRequired","displayName","B","F","Error","U","Y","_len","arguments","_key","h","apply","concat","X","image","J","Z","K","Set","Q","ee","te","as","className","class","g","onStartLoad","p","onLoad","onError","f","w","y","b","v","E","M","k","S","$","I","JSON","stringify","images","then","_ref7","renderImageToString","swapPlaceholderImage","current","querySelector","complete","wasCached","setTimeout","removeAttribute","addEventListener","removeEventListener","add","has","_ref8","innerHTML","isLoading","isLoaded","requestAnimationFrame","cancelAnimationFrame","ref","dangerouslySetInnerHTML","__html","suppressHydrationWarning","ae","ie","re","_len2","_key2","ne","se","oe","__imageData","__error","console","warn","Bio","forwardRef","_props","React","StaticQuery","query","bioQuery","render","data","author","social","introduction","site","siteMetadata","GatsbyImage","avatar","childImageSharp","gatsbyImageData","borderRadius","Link","to","github","href","instagram","facebook","linkedin","scroll","init","smoothscroll","SmoothScroll","speed","speedAsDuration","destroy","go","dest","animateScroll","window","this","C","ignore","header","topOnEmptyHash","durationMax","durationMin","clip","offset","easing","customEasing","updateURL","popstate","emitEvents","L","forEach","call","hasOwnProperty","substr","String","charCodeAt","InvalidCharacterError","toString","Math","max","document","body","scrollHeight","documentElement","offsetHeight","clientHeight","parseInt","getComputedStyle","offsetTop","focus","activeElement","setAttribute","outline","scrollTo","CustomEvent","bubbles","detail","anchor","toggle","dispatchEvent","cancelScroll","tagName","pageYOffset","offsetParent","min","innerHeight","abs","floor","history","pushState","smoothScroll","id","title","matchMedia","matches","defaultPrevented","button","metaKey","ctrlKey","shiftKey","target","closest","hostname","location","pathname","decodeURIComponent","hash","preventDefault","replaceState","state","Element","polyfill","__forceSmoothScrollPolyfill__","userAgent","HTMLElement","SCROLL_TIME","original","scrollBy","elementScroll","scrollElement","scrollIntoView","now","performance","bind","Date","ROUNDING_TOLERANCE","navigator","RegExp","undefined","shouldBailOut","scrollX","pageXOffset","scrollY","scrollLeft","scrollTop","SyntaxError","behavior","scrollableParent","el","isScrollable","parentNode","host","findScrollableParent","parentRects","getBoundingClientRect","clientRects","firstArg","hasScrollableSpace","axis","clientWidth","scrollWidth","canOverflow","overflowValue","isScrollableY","isScrollableX","step","context","value","currentX","currentY","elapsed","startTime","cos","PI","startX","startY","method","scrollable"],"sourceRoot":""}