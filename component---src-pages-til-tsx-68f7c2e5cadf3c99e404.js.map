{"version":3,"file":"component---src-pages-til-tsx-68f7c2e5cadf3c99e404.js","mappings":"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","sources":["webpack://maeng-blog/./src/utils/storage/core.ts","webpack://maeng-blog/./src/utils/storage/browser.ts","webpack://maeng-blog/./src/utils/storage/sessionStorage.ts","webpack://maeng-blog/./src/utils/storage/localStorage.ts","webpack://maeng-blog/./src/utils/storage/index.ts","webpack://maeng-blog/./src/hooks/useRenderedCount.ts","webpack://maeng-blog/./src/hooks/useScrollEvent.ts","webpack://maeng-blog/./src/pages/til.tsx","webpack://maeng-blog/./src/utils/event-manager.ts"],"sourcesContent":["const isEmpty = (storage: Storage) => {\n  return !storage || Object.keys(storage).length === 0\n}\n\nexport const getValueFrom = (storage: Storage, key: string) => {\n  if (isEmpty(storage)) {\n    return null\n  }\n  const rawData = storage.getItem(key)\n\n  if (!rawData) {\n    return null\n  }\n  return JSON.parse(rawData)\n}\n\nexport const setValueTo = (storage: Storage, key: string, data: any) => {\n  if (isEmpty(storage)) {\n    return null\n  }\n  return storage.setItem(key, JSON.stringify(data))\n}\n","export const localStorage = typeof window !== `undefined` ? window.localStorage : undefined\nexport const sessionStorage = typeof window !== `undefined` ? window.sessionStorage : undefined\n","import { partial } from 'maeng-utils/utils'\n\nimport { setValueTo, getValueFrom } from './core'\nimport { sessionStorage } from './browser'\n\nexport const setValueToSessionStorage = partial(setValueTo, sessionStorage!)\nexport const getValueFromSessionStorage = partial(getValueFrom, sessionStorage!)\n","import { partial } from 'maeng-utils/utils'\n\nimport { setValueTo, getValueFrom } from './core'\nimport { localStorage } from './browser'\n\nexport const setValueToLocalStorage = partial(setValueTo, localStorage!)\nexport const getValueFromLocalStorage = partial(getValueFrom, localStorage!)\n","import { getValueFromLocalStorage, setValueToLocalStorage } from './localStorage'\nimport { getValueFromSessionStorage, setValueToSessionStorage } from './sessionStorage'\n\nconst SESSION_STORAGE_KEY = '__maeng_blog_session_storage_key__'\nconst LOCAL_STORAGE_KEY = '__maeng_blog_local_storage_key__'\n\nexport const getCount = (defaultValue: number) => {\n  return getValueFromSessionStorage(`${SESSION_STORAGE_KEY}/count`) || defaultValue\n}\n\nexport const setCount = (val: number) => {\n  return setValueToSessionStorage(`${SESSION_STORAGE_KEY}/count`, val)\n}\n\nexport const getData = () => {\n  return getValueFromLocalStorage(LOCAL_STORAGE_KEY)\n}\n\nexport const setData = (val: string) => {\n  return setValueToLocalStorage(LOCAL_STORAGE_KEY, val)\n}\n\nexport const getTheme = (defaultValue: string) => {\n  return getValueFromLocalStorage(`${LOCAL_STORAGE_KEY}/theme`) || defaultValue\n}\n\nexport const setTheme = (val: string) => {\n  return setValueToLocalStorage(`${LOCAL_STORAGE_KEY}/theme`, val)\n}\n","import { useState, useEffect, useRef, useCallback } from 'react'\nimport * as Storage from '@/utils/storage'\n\nconst useRenderedCount = () => {\n  const initialCount = Storage.getCount(1)\n  const [count, setCount] = useState<number>(initialCount)\n  const countRef = useRef(count)\n  const increaseCount = useCallback(() => setCount((prev) => prev + 1), [])\n\n  useEffect(() => {\n    countRef.current = count\n    Storage.setCount(count)\n  }, [count])\n\n  return [count, countRef, increaseCount] as const\n}\n\nexport default useRenderedCount\n","import { useEffect } from 'react'\n\nconst useScrollEvent = (onScroll: (e: Event) => void) => {\n  useEffect(() => {\n    window.addEventListener(`scroll`, onScroll, { passive: false })\n    return () => {\n      window.removeEventListener(`scroll`, onScroll)\n    }\n  }, [])\n}\n\nexport default useScrollEvent\n","/* eslint-disable react/no-danger */\nimport { formatDate } from 'maeng-utils/utils'\nimport { PageProps, graphql } from 'gatsby'\nimport React, { useCallback, useMemo } from 'react'\nimport { BASE_LINE, INTERSECTION_OBSERVER_ROOT_MARGIN } from '@/constants'\nimport useIntersectionObserver from '@/hooks/useIntersectionObserver'\nimport useRenderedCount from '@/hooks/useRenderedCount'\nimport useScrollEvent from '@/hooks/useScrollEvent'\nimport { addClass, getDocumentHeight } from '@/utils/dom'\nimport { toFit } from '@/utils/event-manager'\n\ninterface TilPageDataProps {\n  site: {\n    siteMetadata: {\n      configs: {\n        countOfInitialPost: number\n      }\n    }\n  }\n  allMarkdownRemark: {\n    edges: {\n      node: {\n        frontmatter: {\n          date: string\n          title: string\n        }\n        fields: {\n          slug: string\n        }\n        html: string\n      }\n    }[]\n  }\n}\n\nconst TILPage = ({ data }: PageProps<TilPageDataProps>) => {\n  const { countOfInitialPost } = data.site.siteMetadata.configs\n  const tilList = data.allMarkdownRemark.edges\n  const [count, countRef, increaseCount] = useRenderedCount()\n\n  const getDistance = useCallback((currentPos: number) => {\n    return getDocumentHeight() - currentPos\n  }, [])\n\n  useIntersectionObserver(\n    (entries: IntersectionObserverEntry[]) => {\n      return entries\n        .filter(({ isIntersecting }) => isIntersecting)\n        .forEach(({ target }) => addClass(target as HTMLElement, 'observed-shown'))\n    },\n    {\n      rootMargin: INTERSECTION_OBSERVER_ROOT_MARGIN,\n    },\n  )\n\n  useScrollEvent(() => {\n    const currentPos = window.scrollY + window.innerHeight\n    const isTriggerPos = () => getDistance(currentPos) < BASE_LINE\n    const doesNeedMore = () => tilList.length > countRef.current * countOfInitialPost\n\n    return toFit(increaseCount, {\n      dismissCondition: () => !isTriggerPos(),\n      triggerCondition: () => isTriggerPos() && doesNeedMore(),\n    })()\n  })\n\n  const refinedTils = useMemo(\n    () => tilList.slice(0, count * countOfInitialPost),\n    [count, countOfInitialPost, tilList],\n  )\n\n  return (\n    <div className=\"flex flex-col flex-1 gap-10 w-[50%] my-8 mx-auto\">\n      {refinedTils.map(({ node }) => (\n        <div\n          key={node.frontmatter.date}\n          className=\"observed observed-hidden mockup-browser border border-base-300\"\n        >\n          <div\n            className=\"mockup-browser-toolbar before:!shadow-[1.4em_0_rgb(248,_113,_113),_2.8em_0_rgb(74,_222,_128),_4.2em_0_rgb(250,_204,_21)] before:!opacity-100\n    \"\n          >\n            <div className=\"input border border-base-300 !outline-none !w-full\">\n              {node.frontmatter.title}\n            </div>\n          </div>\n\n          <div className=\"flex flex-col px-4 py-2 border-t border-base-300\">\n            <small className=\"text-gray-500 text-right mb-2\">\n              {formatDate(new Date(node.frontmatter.date), 'YYYY.MM.DD (ddd)')}\n            </small>\n            <div\n              className=\"min-h-[150px] max-h-[150px] min-w-full prose overflow-auto\"\n              dangerouslySetInnerHTML={{ __html: node.html }}\n            />\n          </div>\n        </div>\n      ))}\n    </div>\n  )\n}\n\nexport const pageQuery = graphql`\n  query TilQuery {\n    site {\n      siteMetadata {\n        configs {\n          countOfInitialPost\n        }\n      }\n    }\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { fileAbsolutePath: { regex: \"//til//\" } }\n    ) {\n      edges {\n        node {\n          frontmatter {\n            title\n            date(formatString: \"YYYY-MM-DD HH:mm:ss\")\n          }\n          fields {\n            slug\n          }\n          html\n        }\n      }\n    }\n  }\n`\n\nexport default TILPage\n","export const toFit = (\n  cb: Function,\n  { dismissCondition = () => false, triggerCondition = () => true },\n) => {\n  if (!cb) {\n    throw Error('Invalid required arguments')\n  }\n\n  let tick = false\n\n  return () => {\n    if (tick) {\n      return null\n    }\n\n    tick = true\n    return requestAnimationFrame(() => {\n      if (dismissCondition()) {\n        tick = false\n        return null\n      }\n\n      if (triggerCondition()) {\n        tick = false\n        return cb()\n      }\n      return null\n    })\n  }\n}\n"],"names":["isEmpty","storage","Object","keys","length","getValueFrom","key","rawData","getItem","JSON","parse","setValueTo","data","setItem","stringify","localStorage","window","undefined","sessionStorage","setValueToSessionStorage","partial","getValueFromSessionStorage","SESSION_STORAGE_KEY","useRenderedCount","initialCount","defaultValue","count","setCount","useState","countRef","useRef","increaseCount","useCallback","prev","useEffect","current","onScroll","addEventListener","passive","removeEventListener","_ref","countOfInitialPost","site","siteMetadata","configs","tilList","allMarkdownRemark","edges","getDistance","currentPos","getDocumentHeight","useIntersectionObserver","entries","filter","_ref2","isIntersecting","forEach","_ref3","target","addClass","rootMargin","INTERSECTION_OBSERVER_ROOT_MARGIN","useScrollEvent","scrollY","innerHeight","isTriggerPos","BASE_LINE","toFit","dismissCondition","triggerCondition","refinedTils","useMemo","slice","_jsx","className","children","map","_ref4","node","_jsxs","frontmatter","title","formatDate","Date","date","dangerouslySetInnerHTML","__html","html","cb","Error","tick","requestAnimationFrame"],"sourceRoot":""}