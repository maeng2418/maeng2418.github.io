{"componentChunkName":"component---src-templates-post-tsx","path":"/markdowns/development/singleton/","result":{"data":{"site":{"siteMetadata":{"title":"Maeng's Blog","author":"Maeng","comment":{"utterances":"maeng2418/maeng2418.github.io"}}},"markdownRemark":{"id":"be6aad25-5625-57b6-bc6c-e37661df19c9","excerpt":"Singleton 패턴 애플리케이션이 시작될 때 어떤 클래스가 최초 한번만 메모리를 할당하고(Static) 그 메모리에 인스턴스를 만들어 사용하는 디자인패턴. 전체 시스템에서의 오직 하나의 인스턴스만 존재하도록 보장.","html":"<h2 id=\"singleton-패턴\" style=\"position:relative;\"><a href=\"#singleton-%ED%8C%A8%ED%84%B4\" aria-label=\"singleton 패턴 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Singleton 패턴</h2>\n<p>애플리케이션이 시작될 때 어떤 클래스가 <strong>최초 한번만</strong> 메모리를 할당하고(Static) 그 메모리에 인스턴스를 만들어 사용하는 디자인패턴.</p>\n<p>전체 시스템에서의 <strong>오직 하나의 인스턴스만</strong> 존재하도록 보장.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> singleton <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> instance\n  <span class=\"token keyword\">var</span> a <span class=\"token operator\">=</span> <span class=\"token string\">'singleton'</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">a</span><span class=\"token operator\">:</span> a<span class=\"token punctuation\">,</span>\n      <span class=\"token function-variable function\">b</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function-variable function\">getInstance</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>instance<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        instance <span class=\"token operator\">=</span> <span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span>\n      <span class=\"token keyword\">return</span> instance <span class=\"token comment\">// 이미 인스턴스가 있다면 새로 생성하지 않음.</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> singletone1 <span class=\"token operator\">=</span> singleton<span class=\"token punctuation\">.</span><span class=\"token function\">getInstance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> singletone2 <span class=\"token operator\">=</span> singleton<span class=\"token punctuation\">.</span><span class=\"token function\">getInstance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>singletone1 <span class=\"token operator\">===</span> singletone2<span class=\"token punctuation\">)</span> <span class=\"token comment\">// true;</span></code></pre></div>","frontmatter":{"title":"싱글톤 패턴","category":"Development","date":"May 23, 2021"}}},"pageContext":{"slug":"/markdowns/development/singleton/","previous":{"fields":{"slug":"/markdowns/web/cookie/"},"frontmatter":{"title":"Cookie와 Session"}},"next":{"fields":{"slug":"/markdowns/development/register_domain/"},"frontmatter":{"title":"AWS 무료 도메인 등록하기"}}}},"staticQueryHashes":["1394309666","3128451518","322374106","3738667449","3990106271"],"slicesMap":{}}