{"componentChunkName":"component---src-templates-post-tsx","path":"/markdowns/nodejs/nodejs/","result":{"data":{"site":{"siteMetadata":{"title":"Maeng's Blog","author":"Maeng","comment":{"utterances":"maeng2418/maeng2418.github.io"}}},"markdownRemark":{"id":"53232db5-b1db-5a4b-9758-5d4ed02155e9","excerpt":"Node.js Node.js는 웹프로그래밍에서 서버 부분을 만들 때 쓰이는 언어입니다. 노드는 자바스크립트를 기본으로 해서 만들어진 언어입니다. Node.js를 알아가는데 중요한 것은 딱 두가지라고 생각합니다. 싱글스레드에 비동기 방식이라는 것과, 자바스크립트 기반이라는 것이죠. 프론트엔드 뿐만 아니라 백엔드 또한 자바스크립트로 작성할 수 있다는 것은 큰 이점이 될 수 있고, 바로 이 점으로 인해 Node.js의 성장세가 계속 되고 있습니다. Node.js…","html":"<h2 id=\"nodejs\" style=\"position:relative;\"><a href=\"#nodejs\" aria-label=\"nodejs permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Node.js</h2>\n<p><strong>Node.js</strong>는 웹프로그래밍에서 서버 부분을 만들 때 쓰이는 언어입니다. 노드는 자바스크립트를 기본으로 해서 만들어진 언어입니다. Node.js를 알아가는데 중요한 것은 딱 두가지라고 생각합니다. 싱글스레드에 비동기 방식이라는 것과, 자바스크립트 기반이라는 것이죠. 프론트엔드 뿐만 아니라 백엔드 또한 자바스크립트로 작성할 수 있다는 것은 큰 이점이 될 수 있고, 바로 이 점으로 인해 Node.js의 성장세가 계속 되고 있습니다.</p>\n<p><strong>Node.js</strong> 는 <strong>서버사이드 자바스크립트</strong> 이며 구글의 자바스크립트 엔진인 <strong>V8</strong>을 기반으로 구성된 일종의 소프트웨어 시스템입니다.</p>\n<p>이벤트 기반으로 개발이 가능하며 Non-Blocking I/O를 지원하기 때문에 <strong>비동기식 프로그래밍</strong> 이 가능합니다. 이 때문에 I/O 부하가 심한 대규모 서비스를 개발하기 적합하다고 할 수 있습니다. 또한 자바스크립트의 표준라이브러리 프로젝트인 CommonJS의 스펙을 따르고 있습니다.</p>\n<h2 id=\"노드의-탄생-배경\" style=\"position:relative;\"><a href=\"#%EB%85%B8%EB%93%9C%EC%9D%98-%ED%83%84%EC%83%9D-%EB%B0%B0%EA%B2%BD\" aria-label=\"노드의 탄생 배경 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>노드의 탄생 배경</h2>\n<p>가장 널리 쓰이는 JSP나 PHP와 같은 언어로 웹 애플리케이션을 개발한다고 한다면 이 웹 애플리케이션은 일반적으로 아파치와 같은 웹 서버에서 동작하게 될 것입니다. 이 때 어떤 클라이언트가 웹 서버에 연결을 요청하게 된다면, 일정한 메모리 공간을 사용하여 새로운 쓰레드를 생성합니다. 이런 형태로 웹 애플리케이션을 개발하여 서비스를 제공하는 경우에는 더 많은 사용자를 지원하기 위해 사업자는 더 많은 서버를 추가할 수 밖에 없었습니다. 이는 단순히 서버 구매 비용뿐만 아니라 이를 운영하는 비용이나 운영에 따라 발생하는 트래픽 비용, 인건비 등 여러 비용을 더하는 문제를 발생시킵니다. 게다가 여러 대의 서버를 사용하더라도 사용자 입장에서는 마치 하나의 서버에 접속하는 것과 같은 효과를 주어야 하기 때문에 모든 서버들은 같은 데이터를 동기화해야 한다는 문제를 발생시키기도 합니다.</p>\n<p>하지만, 노드는 서버에서 클라이언트로부터의 요청, <strong>즉 연결을 처리하는 방법을 새로운 컨셉으로 변경</strong> 하여 이 문제를 해결합니다. 기존에는 각 연결에 대해 새로운 쓰레드를 생성하고 그에 따라 메모리를 할당하여 사용자 요청을 처리했다면, 노드에서는 <strong>각 연결이 하나의 이벤트로서 노드 엔진에서 처리됩니다.</strong></p>\n<h2 id=\"설치하기\" style=\"position:relative;\"><a href=\"#%EC%84%A4%EC%B9%98%ED%95%98%EA%B8%B0\" aria-label=\"설치하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>설치하기</h2>\n<p><strong>NVM 이용해서 설치하기</strong></p>\n<p>Node Version Manager의 약자로, Node.js의 다양한 릴리스 버전을 관리할 수 있어 가장 많이 사용됩니다. apt 패키지 매니저 대신 사용하는 툴입니다.</p>\n<ol>\n<li>\n<p><strong>NVM 문서에 잇는 설치 스크립트를 설치한다.</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ sudo curl -o- [https://raw.githubusercontent.com/creationix/nvm/v0.33.1/install.sh](https://raw.githubusercontent.com/creationix/nvm/v0.33.1/install.sh) | bash</code></pre></div>\n</li>\n<li>\n<p><strong>환경변수 등록하기.</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"># 터미널이 bash라면 /.bash_profile에 zsh라면 /.zshrc에 환경변수를 등록 합니다.\n\n$ vi ~/.bash_profile 혹은$ vi ~/.zshrc\n\nexport NVM_DIR=\"$HOME/.nvm\"\n[ -s \"$NVM_DIR/nvm.sh\" ] &amp;&amp; . \"$NVM_DIR/nvm.sh\" # This loads nvm</code></pre></div>\n</li>\n<li>\n<p><strong>적용하기</strong></p>\n<p><code class=\"language-text\">$ sudo source ~/.bash_profile</code></p>\n</li>\n<li>\n<p><strong>설치할 수 있는 Node.js 버젼 확인하기</strong></p>\n<p><code class=\"language-text\">$ nvm ls-remote</code></p>\n</li>\n<li>\n<p><strong>설치하기</strong></p>\n<p><code class=\"language-text\">$ nvm install 6.10.1</code></p>\n</li>\n<li>\n<p><strong>확인하기</strong></p>\n<p><code class=\"language-text\">$ nvm ls</code></p>\n</li>\n<li>\n<p><strong>버젼 변경하기</strong></p>\n<p><code class=\"language-text\">$ nvm use 6.10.1</code></p>\n</li>\n</ol>\n<p><strong>LTS 버전</strong></p>\n<ul>\n<li>장기적으로 지원이 제공되는 안정적인 버전</li>\n<li>안정성과 보안성에 초점을 두어 개발함</li>\n<li><code class=\"language-text\">$ nvm install node --latest-npm</code></li>\n</ul>\n<p><strong>Current 버전</strong></p>\n<ul>\n<li>업데이트가 잦음</li>\n<li>가장 최신의 버전이므로 불안정하고 숨겨져 있는 버그가 많음</li>\n<li>추가 기능 개발과 기존 API의 기능 개선을 우선함</li>\n</ul>\n<h3 id=\"yarn-설치\" style=\"position:relative;\"><a href=\"#yarn-%EC%84%A4%EC%B9%98\" aria-label=\"yarn 설치 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>yarn 설치</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">curl -o- -L [https://yarnpkg.com/install.sh](https://yarnpkg.com/install.sh) | bash</code></pre></div>","frontmatter":{"title":"Node.js","category":"NodeJS","date":"May 23, 2021"}}},"pageContext":{"slug":"/markdowns/nodejs/nodejs/","previous":{"fields":{"slug":"/markdowns/javascript/asynchronous/"},"frontmatter":{"title":"비동기 프로그래밍"}},"next":{"fields":{"slug":"/markdowns/nodejs/debugging/"},"frontmatter":{"title":"Node.js 디버깅"}}}},"staticQueryHashes":["1394309666","3128451518","322374106","3738667449","3990106271"],"slicesMap":{}}